// void left(Node* root,int level,vector<int>&ans){
//     if(root==NULL)return;
//     if(ans.size()==level)ans.push_back(root->data);
//     left(root->left,level+1,ans);
//     left(root->right,level+1,ans);
// }
// vector<int> leftView(Node *root)
// {
//   // Your code here
//   vector<int>ans;
//   left(root,0,ans);
//   return ans;
   
// }


/////////without recursion method following
vector<int>leftView( Node*root){
    vector<int>ans;
    if(root==NULL)return ans;
    queue<Node*>q;
    q.push(root);
    while(!q.empty()){
        int size=q.size();
        vector<int>v;
        for(int i=0;i<size;i++){
            Node* r=q.front();
            q.pop();
           if(r!=NULL) v.push_back(r->data);
            if(r->left)q.push(r->left);
            if(r->right)q.push(r->right);
            
        }
        ans.push_back(v[0]);
    }
    return ans;
}
