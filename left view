//recursive //
//void left( Node* root, int level,vector<int>&ans){
//     if(root==NULL)return ;
//     if(ans.size()==level)ans.push_back(root->data);
//     if(root->left)left(root->left,level+1,ans);
//     if(root->right)left(root->right,level+1,ans);
// }
// vector<int> leftView(Node *root)
// {
//   // Your code here
//   vector<int>ans;
   
//   left(root,0,ans);
//   return ans;
// }

//using queue//
vector<int> leftView(Node *root){
    
    queue<Node*>q;
  //  map<int,int>mp;
    
    vector<int>ans;
    if(root==NULL)return ans;
    q.push(root);
    while(q.size()){
       
       
       
        int size=q.size();
        for(int i=0;i<size;i++){
            Node* temp=q.front();
              q.pop();
            if(i==0)ans.push_back(temp->data);
            if(temp->left)q.push(temp->left);
            if(temp->right)q.push(temp->right);
        }
    }
    return ans;
}
